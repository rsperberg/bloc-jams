{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingsjNA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Example album\nvar albumDouble = {\n name: 'Double Sextet / 2x5',\n   artist: 'Steve Reich',\n   label: 'Nonesuch',\n   year: '2010',\n   albumArtUrl: '/images/double_sextet_600.jpg',\n   songs: [\n      {name: 'Double Sextet I. Fast', length: '8:39'},\n      {name: 'Double Sextet II. Slow', length: '6:43'},\n      {name: 'Double Sextet III. Fast', length: '6:56'},\n      {name: '2x5 I. Fast', length: '10:12'},\n      {name: '2x5 II. Slow', length: '3:12'},\n      {name: '2x5 III. Fast', length: '7:08'}\n   ]\n};\n// Another Example Album\nvar albumWorks = {\nname: 'Works 1965-1995',\nartist: 'Steve Reich',\nlabel: 'Nonesuch',\nyear: '2005',\nalbumArtUrl: '/images/works_1965-1995_600.jpg',\nsongs: [\n    {name: 'Come Out (1966)', length: '12:58'},\n    {name: 'Piano Phase (1967)', length: '20:36'},\n    {name: 'It\\'s Gonna Rain, Part I (1965)', length: '7:59'},\n    {name: 'It\\'s Gonna Rain, Part II (1965)', length: '7:53'},\n    {name: 'Four Organs / 1970', length: '15:52'},\n    {name: 'Drumming: Part I', length: '17:30'},\n    {name: 'Drumming: Part II', length: '18:10'},\n    {name: 'Drumming: Part III', length: '11:12'},\n    {name: 'Drumming: Part IV', length: '9:50'},\n    {name: 'Music for Mallet Instruments, Voices and Organ', length: '16:58'},\n    {name: 'Clapping Music (1972)', length: '4:48'},\n    {name: 'Six Marimbas', length: '16:19'}\n  ]\n};\nvar albumMusic18 = {\n name: 'Music for 18 Musicians',\n   artist: 'Steve Reich',\n   label: 'Nonesuch',\n   year: '1998',\n   albumArtUrl: '/images/music_for_18_musicians_600.jpg',\n   songs: [\n      {name: 'Music for 18 Musicians: Pulses', length: '5:26'},\n      {name: 'Music for 18 Musicians: Section I', length: '3:58'},\n      {name: 'Music for 18 Musicians: Section II', length: '5:13'},\n      {name: 'Music for 18 Musicians: Section IIIA', length: '3:55'},\n      {name: 'Music for 18 Musicians: Section IIIB', length: '3:45'},\n      {name: 'Music for 18 Musicians: Section IV', length: '6:36'},\n      {name: 'Music for 18 Musicians: Section V', length: '6:48'},\n      {name: 'Music for 18 Musicians: Section VI', length: '4:54'},\n      {name: 'Music for 18 Musicians: Section VII', length: '4:19'},\n      {name: 'Music for 18 Musicians: Section VIII', length: '3:34'},\n      {name: 'Music for 18 Musicians: Section IX', length: '5:23'},\n      {name: 'Music for 18 Musicians: Section X', length: '1:50'},\n      {name: 'Music for 18 Musicians: Section XI', length: '5:44'},\n      {name: 'Music for 18 Musicians: Pulses', length: '6:10'}\n   ]\n};\n\nvar currentlyPlayingSong = null;\nvar songNumberCell, currentlyPlayingCell;\n\nfunction createSongRow(songNumber, songName, songLength) {\n'use strict';\n   var template =\n      '<tr>'\n   + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n   + '  <td class=\"col-md-9\">' + songName + '</td>'\n   + '  <td class=\"col-md-2\">' + songLength + '</td>'\n   + '</tr>'\n   ;\n   /* return $(template); */\n   // Instead of returning the row immediately, we'll attach hover\n   // functionality to it first.\n   var $row = $(template);\n\n   // Change from a song number to play button when the song isn't playing and we hover over the row.\n   function onHover(event) {\n      songNumberCell = $(this).find('.song-number');\n      songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n         songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n      }\n   }\n   // Change from a play button to song number when the song isn't playing and we hover off the row.\n   function offHover(event) {\n      songNumberCell = $(this).find('.song-number');\n      songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n         songNumberCell.html(songNumber);\n      }\n   }\n\n   // Toggle the play, pause, and song number based on the button clicked.\n   function clickHandler(event) {\n      songNumber = $(this).data('song-number');\n      if (currentlyPlayingSong !== null) {\n         // Revert to song number for currently playing song because user started playing new song.\n         currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n         currentlyPlayingCell.html(currentlyPlayingSong);\n      }\n      if (currentlyPlayingSong !== songNumber) {\n         // Switch from Play -> Pause button to indicate new song is playing.\n         $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n         currentlyPlayingSong = songNumber;\n      } else if (currentlyPlayingSong === songNumber) {\n         // Switch from Pause -> Play button to pause currently playing song.\n         $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n         currentlyPlayingSong = null;\n      }\n   }\n\n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n}  // createSongRow\n\nfunction changeAlbumView(album) {\n'use strict';\n   // update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n   // update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n   // update the album information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + ' on ' + album.label);\n   // update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n   // update the song list\n   var $songList = $('.album-song-listing');\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n      var songData = songs[i];\n      var $newRow = createSongRow(i + 1, songData.name, songData.length);\n      $songList.append($newRow);\n   }\n}\n\nfunction updateSeekPercentage($seekBar, event) {\n'use strict';\n   var barWidth = $seekBar.width();\n   var offsetX = event.pageX - $seekBar.offset().left;  // get mouse x offset here\n   // console.log(offsetX);\n   var offsetXPercent = (offsetX  / $seekBar.width()) * 100;\n   offsetXPercent = Math.max(0, offsetXPercent);\n   offsetXPercent = Math.min(100, offsetXPercent);\n\n   var percentageString = offsetXPercent + '%';\n   $seekBar.find('.fill').width(percentageString);\n   $seekBar.find('.thumb').css({left: percentageString});\n}\n\n   function setupSeekBars() {\n   'use strict';\n   var $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n      updateSeekPercentage($(this), event);\n   });\n\n   $seekBars.find('.thumb').mousedown(function thumbMouseDown(event) {\n      var $seekBar = $(this).parent();\n      $seekBar.addClass('no-animate');\n      $(document).bind('mousemove.thumb', function mousemoveThumbBind(event) {\n//      $('.player-bar').bind('mousemove.thumb', function mousemoveThumbBind(event) {\n//      $(document).bind('mousemove', function mousemoveThumbBind(event) {\n         updateSeekPercentage($seekBar, event);\n      });\n\n      // cleanup\n       $(document).bind('mouseup.thumb', function cleanupR() {\n         $seekBar.removeClass('no-animate');\n         $(document).unbind('mousemove.thumb');\n         $(document).unbind('mouseup.thumb');\n//     $('.player-bar').bind('mouseup.thumb', function cleanupR() {\n//         $seekBar.removeClass('no-animate');\n//         $('.player-bar').unbind('mousemove.thumb');\n //        $('.player-bar').unbind('mouseup.thumb');\n//      $(document).bind('mouseup', function cleanupR() {\n//         $seekBar.removeClass('no-animate');\n//         $(document).unbind('mousemove');\n//         $(document).unbind('mouseup');\n     });\n   });\n}\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n// Wait until the HTML is fully processed.\n$(document).ready(function documentReadyR() {\n   //   console.log('album.js');\n   $( '.player-bar' ).bind( 'click', function mouseWhere( event ) {\n    alert( 'The mouse cursor is at (' +\n      event.pageX + ', ' + event.pageY +\n      ')' );\n  });\n   var theAlbum = albumDouble;\n   changeAlbumView(theAlbum);\n   setupSeekBars();\n});\n}\n","/*\nrequire('./landing');\nrequire('./collection');\nrequire('./album');\nrequire('./profile');\n*/\nblocJams = angular.module('BlocJams', ['ui.router']);\n// angular.module('BlocJams', []).controller('Landing.controller', ['$scope', function($scope) {\n//   console.log('Landing.controller');\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n   $locationProvider.html5Mode(true);\n\n   $stateProvider.state('landing', {\n     url: '/',\n     controller: 'Landing.controller',\n     templateUrl: '/templates/landing.html'\n   });\n }]);\n\n // This is a cleaner way to call the controller than crowding it on the module definition.\n blocJams.controller('Landing.controller', ['$scope', function($scope) {\n\n   $scope.titleText = 'Bloc Jams';\n   $scope.subText = 'Turn the music up!';\n   $scope.subTextClicked = function() {\n     $scope.subText += '!';\n   };\n\n   function shuffle(o) { //v1.0\n    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {\n    return o;\n }\n}\n\n       var albumsArray = [\n     '/images/album-placeholders/album-1.jpg',\n     '/images/album-placeholders/album-2.jpg',\n     '/images/album-placeholders/album-3.jpg',\n     '/images/album-placeholders/album-4.jpg',\n     '/images/album-placeholders/album-5.jpg',\n     '/images/album-placeholders/album-6.jpg',\n     '/images/album-placeholders/album-7.jpg',\n     '/images/album-placeholders/album-8.jpg',\n     '/images/album-placeholders/album-9.jpg'\n   ];\n$scope.albumURLs = albumsArray;\n$scope.titleTextClicked = shuffle(albumsArray);\n\n}]);\n","function buildAlbumThumbnail() {\n   'use strict';\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '    <img src=\"/images/album-placeholder.png\"/>'\n      + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '      X.XX total length'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n\n   return $(template);\n }\n\nfunction buildAlbumOverlay(albumURL) {\n   'use strict';\n   var template =\n         '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href= \"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>';\n      return $(template);\n}\n\nfunction updateCollectionView() {\n   'use strict';\n   var $collection = $('.collection-container .row');\n   $collection.empty();\n\n   for (var i = 0; i < 33; i++) {\n      var $newThumbnail = buildAlbumThumbnail();\n      $collection.append($newThumbnail);\n   }\n\n   function onHover(event) {\n     $(this).append(buildAlbumOverlay('/album.html'));\n   }\n\n   function offHover(event) {\n      $(this).find('.collection-album-image-overlay').remove();\n  }\n\n   $collection.find('.collection-album-image-container').hover(onHover, offHover);\n }\n\n\nif (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n//      console.log('collection.js');\n      updateCollectionView();\n   });\n}\n","$(document).ready(function() {\n   $('.hero-content h3').click(function h3Click() {\n      var subText = $(this).text();\n      $(this).text(subText + '!');\n   });\n\n   /* Added for checkpoint 26  */\n$('.hero-content h3').hover(function h3Hover() {\n      $(this).css('color','red');\n   });\n\n   function onHoverAction(event) {\n//     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '20px'});\n   }\n\n   function offHoverAction(event) {\n//     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n   }\n\n$('.selling-points .point').hover(onHoverAction, offHoverAction);\n/* Added for checkpoint 26  */\n$('.selling-points .point h5').click(function h5Click() {\n//  console.log('Clicking.');\n  $(this).css('font-size', '24pt');\n});\n\n/* Added for checkpoint 26  */\n$('.logo ').click(function logoClick() {\n  $(this).fadeOut(2000);\n});\n});\n","// holds the name of our tab button container for selection later in the function\nvar tabsContainer = '.user-profile-tabs-container';\nfunction selectTabHandler(event) {\n   'use strict';\n   var $tab = $(this);\n   $(tabsContainer + ' li').removeClass('active');\n   $tab.parent().addClass('active');\n   var selectedTabName = $tab.attr('href');\n//   alert(selectedTabName);\n   $('.tab-pane').addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n}\nif (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function tabsClick() {\n      var $tabs = $(tabsContainer + ' a');\n      $tabs.click(selectTabHandler);\n      $tabs[0].click();\n   });\n}\n"]}